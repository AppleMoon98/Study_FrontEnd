{"version":3,"file":"static/js/225.45598cef.chunk.js","mappings":"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","sources":["components/common/FetchingModal.js","components/products/ReadComponent.js","pages/products/ReadPage.js","api/productsApi.js","hooks/useCustomMove.js"],"sourcesContent":["const FetchingModal = () => {\r\n    return (\r\n        <div className=\"fixed top-0 left-0 z-[1055] flex h-full w-full place-items-center justify-center bg-black bg-opacity-20\">\r\n            <div className=\"bg-white rounded-3xl opacity-100 min-w-min h-1/4 min-w-[600px] flex justify-center items-center\">\r\n                <div className=\"text-4xl font-extrabold text-orange-400 m-20\">\r\n                    Loading....\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FetchingModal\r\n","import { useEffect, useState } from \"react\"\r\nimport { getOne, getOneImage } from \"../../api/productsApi\"\r\nimport useCustomMove from \"../../hooks/useCustomMove\"\r\nimport FetchingModal from \"../common/FetchingModal\"\r\n\r\nconst initState = {\r\n    pno: 0,\r\n    pname: '',\r\n    pdesc: '',\r\n    price: 0,\r\n    delflag: false\r\n}\r\n\r\nconst makeDiv = (title, value) =>\r\n    <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 w-full flex flex-wrap items-stretch text-lg\">\r\n            <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\r\n            <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">{value}</div>\r\n        </div>\r\n    </div>\r\n\r\nconst ReadComponent = ({ pno }) => {\r\n    const [products, setProducts] = useState(initState)\r\n    const { moveToList, moveToModify } = useCustomMove()\r\n    const [fetching, setFetching] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setFetching(true)\r\n        getOne(pno).then(data => {\r\n            console.log(data)\r\n            setProducts(data)\r\n            setFetching(false)\r\n        })\r\n    }, [pno])\r\n\r\n    return (\r\n        <div className=\"border-2 border-green-200 mt-10 m-2 p-4\">\r\n            {fetching ? <FetchingModal/> : <></>}\r\n            {makeDiv('번호', products.pno)}\r\n            {makeDiv('작성자', products.pdesc)}\r\n            {makeDiv('제목', products.pname)}\r\n            {makeDiv('가격', products.price)}\r\n            <div className=\"flex justify-center\">\r\n                <div className=\"relative mb-4 w-full flex flex-wrap items-stretch text-lg\">\r\n                    {products.uploadFileNames && products.uploadFileNames.length > 0 ? (\r\n                        products.uploadFileNames.map((fileName, ord) => (\r\n                            <img className=\"w-1/2\" key={ord} src={getOneImage(fileName)} alt={`${products.pname}-${ord}`}/>\r\n                        ))) \r\n                    : (<div className=\"text-gray-400 p-4\">이미지가 없습니다</div>)}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end\">\r\n                <button type=\"button\" className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\" onClick={() => moveToList()}>목록</button>\r\n                <button type=\"button\" className=\"rounded p-4 m-2 text-xl w-32 text-white bg-red-500\" onClick={() => moveToModify(pno)}>수정</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadComponent;","import { useParams } from \"react-router-dom\";\r\nimport ReadComponent from \"../../components/products/ReadComponent\";\r\n\r\nconst ReadPage = () => {\r\n    const { pno } = useParams()\r\n\r\n    return (\r\n        <div className=\"font-extrabold p-4 w-full bg-white\">\r\n            <div className=\"text-2xl\">\r\n                Products Read Page Component... {pno}\r\n                <div>\r\n                    <ReadComponent pno={pno} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadPage;","import { API_SERVER_HOST } from \"./todoApi\"\r\nimport jwtAxios from \"../util/JWTUtil\"\r\n\r\nconst host = `${API_SERVER_HOST}/api/products`\r\n\r\nexport const getOne = async (pno) => {\r\n    const res = await jwtAxios.get(`${host}/${pno}`)\r\n    return res.data\r\n}\r\n\r\nexport const getList = async (pageParam) => {\r\n    const { page, size } = pageParam\r\n    const res = await jwtAxios.get(`${host}/list`, { params: { page: page, size: size } })\r\n    return res.data\r\n}\r\n\r\nexport const postAdd = async (products) => {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n    const res = await jwtAxios.post(`${host}/`, products, header)\r\n\r\n    return res.data\r\n}\r\n\r\nexport const putOne = async (formData, pno) => {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n    const res = await jwtAxios.put(`${host}/${pno}`, formData, header)\r\n    return res.data\r\n}\r\n\r\n\r\nexport const deleteOne = async (products) => {\r\n    const res = await jwtAxios.delete(`${host}/${products.pno}`)\r\n    return res.data\r\n}\r\n\r\nexport const getOneImage = (fileName) => {\r\n    return `${host}/view/${fileName}`\r\n}","import { useState } from \"react\";\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n    if (!param)\r\n        return defaultValue;\r\n    return parseInt(param);\r\n}\r\n\r\nconst useCustomMove = () => {\r\n    const navigate = useNavigate()\r\n    const [queryParams] = useSearchParams()\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const page = getNum(queryParams.get(\"page\"), 1)\r\n    const size = getNum(queryParams.get(\"size\"), 10)\r\n    const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n    const moveToList = (pageParam) => {\r\n        let queryStr = \"\"\r\n        if (pageParam) {\r\n            const pageNum = getNum(pageParam.page, 1)\r\n            const sizeNum = getNum(pageParam.size, 10)\r\n            queryStr = createSearchParams({ page: pageNum, size: sizeNum }).toString()\r\n        } else {\r\n            queryStr = queryDefault\r\n        }\r\n        setRefresh(!refresh)\r\n        navigate({ pathname: '../list', search: queryStr })\r\n    }\r\n\r\n    const moveToModify = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../modify/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n\r\n    const moveToRead = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../read/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n    return { page, size, refresh, moveToList, moveToModify, moveToRead }\r\n}\r\n\r\nexport default useCustomMove;"],"names":["FetchingModal","_jsx","className","children","initState","pno","pname","pdesc","price","delflag","makeDiv","title","value","_jsxs","_ref","products","setProducts","useState","moveToList","moveToModify","useCustomMove","fetching","setFetching","useEffect","getOne","then","data","console","log","_Fragment","uploadFileNames","length","map","fileName","ord","src","getOneImage","alt","type","onClick","ReadPage","useParams","ReadComponent","host","API_SERVER_HOST","async","jwtAxios","get","getList","page","size","pageParam","params","postAdd","post","headers","putOne","formData","put","deleteOne","delete","getNum","param","defaultValue","parseInt","navigate","useNavigate","queryParams","useSearchParams","refresh","setRefresh","queryDefault","createSearchParams","toString","queryStr","pageNum","sizeNum","pathname","search","num","moveToRead"],"sourceRoot":""}