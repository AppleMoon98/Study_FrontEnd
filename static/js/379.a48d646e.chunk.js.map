{"version":3,"file":"static/js/379.a48d646e.chunk.js","mappings":"wKAIA,MAAMA,EAAY,CACdC,IAAK,EACLC,MAAO,GACPC,OAAQ,GACRC,QAAS,KACTC,UAAU,GAGRC,EAAUA,CAACJ,EAAOK,KACpBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4DAA2DC,SAAA,EACtEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAER,KACjDM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAAEH,SA+BhF,EA3BsBK,IAAc,IAAb,IAAEX,GAAKW,EAC1B,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAASf,IAC3B,WAAEgB,EAAU,aAAEC,IAAiBC,EAAAA,EAAAA,KASrC,OAPAC,EAAAA,EAAAA,WAAU,MACNC,EAAAA,EAAAA,IAAOnB,GAAKoB,KAAKC,IACbC,QAAQC,IAAIF,GACZR,EAAQQ,MAEb,CAACrB,KAGAU,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,CACjDJ,EAAQ,eAAMO,EAAKZ,KACnBK,EAAQ,qBAAOO,EAAKV,QACpBG,EAAQ,eAAMO,EAAKX,OACnBI,EAAQ,2BAAQO,EAAKT,SACrBE,EAAQ,eAAMO,EAAKR,SAAW,eAAO,uBAEtCM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAAShB,UAAU,sDAAsDiB,QAASA,IAAMV,IAAaN,SAAC,UACnHF,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAAShB,UAAU,qDAAqDiB,QAASA,IAAMT,EAAahB,GAAKS,SAAC,kBCvBvI,EAfiBiB,KACb,MAAM,IAAE1B,IAAQ2B,EAAAA,EAAAA,KAEhB,OACIpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UAC/CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,CAAC,+BACOT,GAC7BO,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACqB,EAAa,CAAC5B,IAAKA,W,sDCRxC,MAAM6B,EAASA,CAACC,EAAOC,IACdD,EAEEE,SAASF,GADLC,EA4Cf,EAxCsBd,KAClB,MAAMgB,GAAWC,EAAAA,EAAAA,OACVC,IAAeC,EAAAA,EAAAA,OACfC,EAASC,IAAcxB,EAAAA,EAAAA,WAAS,GAEjCyB,EAAOV,EAAOM,EAAYK,IAAI,QAAS,GACvCC,EAAOZ,EAAOM,EAAYK,IAAI,QAAS,IACvCE,GAAeC,EAAAA,EAAAA,IAAmB,CAAEJ,OAAME,SAAQG,WA8BxD,MAAO,CAAEL,OAAME,OAAMJ,UAAStB,WA5BV8B,IAChB,IAAIC,EAAW,GACf,GAAID,EAAW,CACX,MAAME,EAAUlB,EAAOgB,EAAUN,KAAM,GACjCS,EAAUnB,EAAOgB,EAAUJ,KAAM,IACvCK,GAAWH,EAAAA,EAAAA,IAAmB,CAAEJ,KAAMQ,EAASN,KAAMO,IAAWJ,UACpE,MACIE,EAAWJ,EAEfJ,GAAYD,GACZJ,EAAS,CAAEgB,SAAU,UAAWC,OAAQJ,KAkBF9B,aAfpBmC,IAClB7B,QAAQC,IAAImB,GACZT,EAAS,CACLgB,SAAU,aAAaE,IACvBD,OAAQR,KAWwCU,WAPpCD,IAChB7B,QAAQC,IAAImB,GACZT,EAAS,CACLgB,SAAU,WAAWE,IACrBD,OAAQR,M","sources":["components/todo/ReadComponent.js","pages/todo/ReadPage.js","hooks/useCustomMove.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { getOne } from \"../../api/todoApi\"\r\nimport useCustomMove from \"../../hooks/useCustomMove\"\r\n\r\nconst initState = {\r\n    tno: 0,\r\n    title: '',\r\n    writer: '',\r\n    dueDate: null,\r\n    complete: false\r\n}\r\n\r\nconst makeDiv = (title, value) =>\r\n    <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 w-full flex flex-wrap items-stretch text-lg\">\r\n            <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\r\n            <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">{value}</div>\r\n        </div>\r\n    </div>\r\n\r\nconst ReadComponent = ({ tno }) => {\r\n    const [todo, setTodo] = useState(initState)\r\n    const { moveToList, moveToModify } = useCustomMove()\r\n\r\n    useEffect(() => {\r\n        getOne(tno).then(data => {\r\n            console.log(data)\r\n            setTodo(data)\r\n        })\r\n    }, [tno])\r\n\r\n    return (\r\n        <div className=\"border-2 border-sky-200 mt-10 m-2 p-4\">\r\n            {makeDiv('번호', todo.tno)}\r\n            {makeDiv('작성자', todo.writer)}\r\n            {makeDiv('제목', todo.title)}\r\n            {makeDiv('작성일자', todo.dueDate)}\r\n            {makeDiv('수정', todo.complete ? '수정' : '아니요')}\r\n\r\n            <div className=\"flex justify-end\">\r\n                <button type=\"button\" className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\" onClick={() => moveToList()}>List</button>\r\n                <button type=\"button\" className=\"rounded p-4 m-2 text-xl w-32 text-white bg-red-500\" onClick={() => moveToModify(tno)}>Modify</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadComponent;","import { useParams } from \"react-router-dom\";\r\nimport ReadComponent from \"../../components/todo/ReadComponent\";\r\n\r\nconst ReadPage = () => {\r\n    const { tno } = useParams()\r\n\r\n    return (\r\n        <div className=\"font-extrabold p-4 w-full bg-white\">\r\n            <div className=\"text-2xl\">\r\n                Todo Read Page Component... {tno}\r\n                <div>\r\n                    <ReadComponent tno={tno} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadPage;","import { useState } from \"react\";\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n    if (!param)\r\n        return defaultValue;\r\n    return parseInt(param);\r\n}\r\n\r\nconst useCustomMove = () => {\r\n    const navigate = useNavigate()\r\n    const [queryParams] = useSearchParams()\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const page = getNum(queryParams.get(\"page\"), 1)\r\n    const size = getNum(queryParams.get(\"size\"), 10)\r\n    const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n    const moveToList = (pageParam) => {\r\n        let queryStr = \"\"\r\n        if (pageParam) {\r\n            const pageNum = getNum(pageParam.page, 1)\r\n            const sizeNum = getNum(pageParam.size, 10)\r\n            queryStr = createSearchParams({ page: pageNum, size: sizeNum }).toString()\r\n        } else {\r\n            queryStr = queryDefault\r\n        }\r\n        setRefresh(!refresh)\r\n        navigate({ pathname: '../list', search: queryStr })\r\n    }\r\n\r\n    const moveToModify = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../modify/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n\r\n    const moveToRead = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../read/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n    return { page, size, refresh, moveToList, moveToModify, moveToRead }\r\n}\r\n\r\nexport default useCustomMove;"],"names":["initState","tno","title","writer","dueDate","complete","makeDiv","value","_jsx","className","children","_jsxs","_ref","todo","setTodo","useState","moveToList","moveToModify","useCustomMove","useEffect","getOne","then","data","console","log","type","onClick","ReadPage","useParams","ReadComponent","getNum","param","defaultValue","parseInt","navigate","useNavigate","queryParams","useSearchParams","refresh","setRefresh","page","get","size","queryDefault","createSearchParams","toString","pageParam","queryStr","pageNum","sizeNum","pathname","search","num","moveToRead"],"sourceRoot":""}