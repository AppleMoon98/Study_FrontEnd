"use strict";(self.webpackChunkmall=self.webpackChunkmall||[]).push([[715],{715:(e,t,o)=>{o.r(t),o.d(t,{default:()=>c});o(43);var r=o(447);class n extends Error{}function s(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return function(e){return decodeURIComponent(atob(e).replace(/(.)/g,(e,t)=>{let o=t.charCodeAt(0).toString(16).toUpperCase();return o.length<2&&(o="0"+o),"%"+o}))}(t)}catch(o){return atob(t)}}n.prototype.name="InvalidTokenError";var a=o(579);const c=()=>{const e=e=>{fetch("http://localhost:8080/member/auth/google",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e})}).then(e=>e.json()).then(e=>{console.log("Server response:",e)}).catch(e=>{console.error("Error:",e)})};return(0,a.jsxs)("div",{children:[(0,a.jsx)("h2",{children:"Google \ub85c\uadf8\uc778"}),(0,a.jsx)(r.j,{onSuccess:t=>{const o=t.credential;console.log("Google ID Token:",o);const r=function(e,t){if("string"!==typeof e)throw new n("Invalid token specified: must be a string");t||(t={});const o=!0===t.header?0:1,r=e.split(".")[o];if("string"!==typeof r)throw new n(`Invalid token specified: missing part #${o+1}`);let a;try{a=s(r)}catch(c){throw new n(`Invalid token specified: invalid base64 for part #${o+1} (${c.message})`)}try{return JSON.parse(a)}catch(c){throw new n(`Invalid token specified: invalid json for part #${o+1} (${c.message})`)}}(o);console.log("Decoded User Info:",r),e(o)},onError:()=>{console.log("Login Failed")}})]})}}}]);
//# sourceMappingURL=715.497f2979.chunk.js.map