{"version":3,"file":"static/js/210.b7285027.chunk.js","mappings":"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","sources":["components/todo/ListComponent.js","pages/todo/ListPage.js","components/common/PageComponent.js","hooks/useCustomMove.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport { getList } from \"../../api/todoApi\";\r\nimport PageComponent from \"../common/PageComponent\";\r\n\r\nconst initState = {\r\n    dtoList:[],\r\n    pageNumList:[],\r\n    pageRequestDTO:null,\r\n    prev:false,\r\n    next:false,\r\n    totalCount:0,\r\n    prevPage:0,\r\n    nextPage:0,\r\n    totalPage:0,\r\n    current:0\r\n}\r\n\r\nconst ListComponent = () => {\r\n    const {page, size, moveToList, moveToRead, refresh} = useCustomMove()\r\n    const [serverData, setServerData] = useState(initState)\r\n    useEffect(() => {\r\n        getList({page, size}).then( data => {\r\n            console.log(data)\r\n            setServerData(data)\r\n        })\r\n    }, [page, size, refresh])\r\n    return(\r\n        <div className=\"border-2 border-green-100 mt-10 mr-2 ml-2\">\r\n            <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n                {serverData.dtoList.map( todo => \r\n                    <div key={todo.tno} className=\"w-full min-w-[400px] p-2 m-2 rounded shadow-md\"\r\n                    onClick={ () => moveToRead(todo.tno)}>\r\n                        <div className=\"flex\">\r\n                            <div className=\"font-extrabold text-lg p-2 w-1/12\">{todo.tno}</div>\r\n                            <div className=\"font-extrabold text-base m-1 p-2 w-8/12\">{todo.title}</div>\r\n                            <div className=\"font-medium text-base m-1 p-2 w-3/12\">{todo.dueDate}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <PageComponent serverData={serverData} movePage={moveToList}></PageComponent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListComponent;","import { useSearchParams } from \"react-router-dom\";\r\nimport ListComponent from \"../../components/todo/ListComponent\";\r\n\r\nconst ListPage = () => {\r\n    const [queryParams] = useSearchParams()\r\n\r\n    const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1\r\n    const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10\r\n\r\n    return (\r\n        <div className=\"p-4 w-full bg-white\">\r\n            <div className=\"text-3xl font-extrabold text-green-700\">\r\n                Todo List Page components\r\n            </div>\r\n            <div className=\"text-2xl font-extrabold\">\r\n                <br />page: {page} / size: {size}\r\n            </div>\r\n            <ListComponent></ListComponent>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPage;","const PageComponent = ({ serverData, movePage }) => {\r\n    return (\r\n        <div className=\"m-6 flex justify-center\">\r\n            {serverData.prev ?\r\n                <div className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n                    onClick={() => movePage({ page: serverData.prevPage })}>이전</div> : <></>}\r\n            {serverData.pageNumList.map(pageNum =>\r\n                <div key={pageNum} className={`m-2 p-2 w-12 text-center rounded shadow-md text-white \r\n            ${serverData.current === pageNum ? 'bg-red-500' : 'bg-blue-400'}`} onClick={() => movePage({ page: pageNum })}>{pageNum}</div>)}\r\n            {serverData.next ?\r\n                <div className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n                    onClick={() => movePage({ page: serverData.nextPage })}>다음</div> : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageComponent;","import { useState } from \"react\";\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n    if (!param)\r\n        return defaultValue;\r\n    return parseInt(param);\r\n}\r\n\r\nconst useCustomMove = () => {\r\n    const navigate = useNavigate()\r\n    const [queryParams] = useSearchParams()\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const page = getNum(queryParams.get(\"page\"), 1)\r\n    const size = getNum(queryParams.get(\"size\"), 10)\r\n    const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n    const moveToList = (pageParam) => {\r\n        let queryStr = \"\"\r\n        if (pageParam) {\r\n            const pageNum = getNum(pageParam.page, 1)\r\n            const sizeNum = getNum(pageParam.size, 10)\r\n            queryStr = createSearchParams({ page: pageNum, size: sizeNum }).toString()\r\n        } else {\r\n            queryStr = queryDefault\r\n        }\r\n        setRefresh(!refresh)\r\n        navigate({ pathname: '../list', search: queryStr })\r\n    }\r\n\r\n    const moveToModify = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../modify/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n\r\n    const moveToRead = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../read/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n    return { page, size, refresh, moveToList, moveToModify, moveToRead }\r\n}\r\n\r\nexport default useCustomMove;"],"names":["initState","dtoList","pageNumList","pageRequestDTO","prev","next","totalCount","prevPage","nextPage","totalPage","current","ListComponent","page","size","moveToList","moveToRead","refresh","useCustomMove","serverData","setServerData","useState","useEffect","getList","then","data","console","log","_jsxs","className","children","_jsx","map","todo","onClick","tno","title","dueDate","PageComponent","movePage","ListPage","queryParams","useSearchParams","get","parseInt","_ref","_Fragment","pageNum","getNum","param","defaultValue","navigate","useNavigate","setRefresh","queryDefault","createSearchParams","toString","pageParam","queryStr","sizeNum","pathname","search","moveToModify","num"],"sourceRoot":""}