{"version":3,"file":"static/js/423.e713d4cb.chunk.js","mappings":"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","sources":["components/todo/ModifyComponent.js","pages/todo/ModifyPage.js","hooks/useCustomMove.js","components/common/ResultModal.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { deleteOne, getOne, putOne } from \"../../api/todoApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\"\r\nimport ResultModal from \"../common/ResultModal\"\r\n\r\nconst initState = {\r\n    tno: 0,\r\n    title: '',\r\n    writer: '',\r\n    dueDate: 'null',\r\n    complate: false\r\n}\r\n\r\nconst ModifyComponent = ({ tno }) => {\r\n    const [todo, setTodo] = useState({ ...initState })\r\n    const [result, setResult] = useState(null)\r\n    const {moveToList, moveToRead} = useCustomMove()\r\n\r\n    const handleChangeTodo = (e) => {\r\n        todo[e.target.name] = e.target.value\r\n        setTodo({ ...todo })\r\n    }\r\n\r\n    const handleChangeTodoComplete = (e) => {\r\n        const value = e.target.value\r\n        todo.complate = (value === 'Y')\r\n        setTodo({...todo})\r\n    }\r\n\r\n    const handleClickModify = () => {\r\n        putOne(todo).then(data => {\r\n            setResult(\"수정성공\")\r\n        })\r\n    }\r\n\r\n    const handleClickDelete = () => {\r\n        deleteOne(todo).then(data => {\r\n            setResult(\"삭제성공\")\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        if(result === '삭제성공')\r\n            moveToList()\r\n        else\r\n            moveToRead(tno)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOne(tno).then(data => {\r\n            console.log(data)\r\n            setTodo(data)\r\n        })\r\n    }, [tno])\r\n\r\n    return (\r\n        <div className=\"border-2 border-green-200 mt-10 m-2 p-4\">\r\n            { result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal> : <></>}\r\n            <div className=\"flex justify-center\">\r\n                <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n                    <div className=\"w-1/5 p-6 text-right font-bold\">number</div>\r\n                    <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-500 shadow-md\"\r\n                        name=\"tno\" type={'text'} value={todo.tno} disabled/>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n                    <div className=\"w-1/5 p-6 text-right font-bold\">writer</div>\r\n                    <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-500 shadow-md\"\r\n                        name=\"writer\" type={'text'} value={todo.writer} disabled/>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n                    <div className=\"w-1/5 p-6 text-right font-bold\">title</div>\r\n                    <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-500 shadow-md\"\r\n                        name=\"title\" type={'text'} value={todo.title} onChange={handleChangeTodo} />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n                    <div className=\"w-1/5 p-6 text-right font-bold\">dueDate</div>\r\n                    <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-500 shadow-md\"\r\n                        name=\"dueDate\" type={'date'} value={todo.dueDate} onChange={handleChangeTodo} />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n                <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n                    <div className=\"w-1/5 p-6 text-right font-bold\">complate</div>\r\n                    <select name=\"status\" className=\"border-solid border-2 rounded m-1 p-2\" onChange={handleChangeTodoComplete}\r\n                        value={todo.complate ? 'Y' : 'N'}>\r\n                        <option value='Y'>complate</option>\r\n                        <option value='N'>not complate</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex justify-end p-4\">\r\n                <button type=\"button\" className=\"rounded p-4 m-2 text-xl w-32 text-white bg-red-500\"\r\n                    onClick={handleClickDelete}>삭제</button>\r\n                <button type=\"button\" className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n                    onClick={handleClickModify}>수정</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModifyComponent;","import { useParams } from \"react-router-dom\";\r\nimport ModifyComponent from \"../../components/todo/ModifyComponent\";\r\n\r\nconst ModifyPage = () => {\r\n    const {tno} = useParams()\r\n\r\n    return (\r\n        <div className=\"p-4 w-full bg-white\">\r\n            <div className=\"text-3xl font-extrabold\">\r\n                Todo Modify Page Component...\r\n            </div>\r\n            <ModifyComponent tno={tno}></ModifyComponent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModifyPage","import { useState } from \"react\";\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n    if (!param)\r\n        return defaultValue;\r\n    return parseInt(param);\r\n}\r\n\r\nconst useCustomMove = () => {\r\n    const navigate = useNavigate()\r\n    const [queryParams] = useSearchParams()\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const page = getNum(queryParams.get(\"page\"), 1)\r\n    const size = getNum(queryParams.get(\"size\"), 10)\r\n    const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n    const moveToList = (pageParam) => {\r\n        let queryStr = \"\"\r\n        if (pageParam) {\r\n            const pageNum = getNum(pageParam.page, 1)\r\n            const sizeNum = getNum(pageParam.size, 10)\r\n            queryStr = createSearchParams({ page: pageNum, size: sizeNum }).toString()\r\n        } else {\r\n            queryStr = queryDefault\r\n        }\r\n        setRefresh(!refresh)\r\n        navigate({ pathname: '../list', search: queryStr })\r\n    }\r\n\r\n    const moveToModify = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../modify/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n\r\n    const moveToRead = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../read/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n    return { page, size, refresh, moveToList, moveToModify, moveToRead }\r\n}\r\n\r\nexport default useCustomMove;","const ResultModal = ({title, content, callbackFn}) => {\r\n    return (\r\n        <div className={'fixed top-0 left-0 z-[1055] flex h-full w-full justify-center bg-black bg-opacity-20'}\r\n            onClick={() => { if (callbackFn) callbackFn() }}>\r\n            <div className=\"absolute bg-white dark:bg-gray-700 opacity-100 w-1/4 rounded mt-10 mb-10 px-6 min-w-[600px]\">\r\n                <div className=\"justify-center bg-warning-400 mt-6 mb-6 text-2xl border-b-4 border-gray-500\">{title}</div>\r\n                <div className=\"text-4xl border-orange-400 border-b-4 pt-4 pb-4\">{content}</div>\r\n                <div className=\"justify-end flex\">\r\n                    <button className=\"rounded bg-blue-500 mt-4 mb-4 px-6 pt-4 pb-4 text-lg text-white\"\r\n                        onClick={() => { if (callbackFn) callbackFn() }}>Close Modal</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultModal"],"names":["initState","tno","title","writer","dueDate","complate","_ref","todo","setTodo","useState","result","setResult","moveToList","moveToRead","useCustomMove","handleChangeTodo","e","target","name","value","useEffect","getOne","then","data","console","log","_jsxs","className","children","_jsx","ResultModal","content","callbackFn","closeModal","_Fragment","type","disabled","onChange","onClick","handleClickDelete","deleteOne","handleClickModify","putOne","ModifyPage","useParams","ModifyComponent","getNum","param","defaultValue","parseInt","navigate","useNavigate","queryParams","useSearchParams","refresh","setRefresh","page","get","size","queryDefault","createSearchParams","toString","pageParam","queryStr","pageNum","sizeNum","pathname","search","moveToModify","num"],"sourceRoot":""}