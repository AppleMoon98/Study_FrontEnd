{"version":3,"file":"static/js/393.65b7dabe.chunk.js","mappings":"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","sources":["components/common/FetchingModal.js","api/productsApi.js","components/products/ListComponent.js","pages/products/ListPage.js","hooks/useCustomLogin.js","components/common/PageComponent.js","hooks/useCustomMove.js"],"sourcesContent":["const FetchingModal = () => {\r\n    return (\r\n        <div className=\"fixed top-0 left-0 z-[1055] flex h-full w-full place-items-center justify-center bg-black bg-opacity-20\">\r\n            <div className=\"bg-white rounded-3xl opacity-100 min-w-min h-1/4 min-w-[600px] flex justify-center items-center\">\r\n                <div className=\"text-4xl font-extrabold text-orange-400 m-20\">\r\n                    Loading....\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FetchingModal\r\n","import { API_SERVER_HOST } from \"./todoApi\"\r\nimport jwtAxios from \"../util/JWTUtil\"\r\n\r\nconst host = `${API_SERVER_HOST}/api/products`\r\n\r\nexport const getOne = async (pno) => {\r\n    const res = await jwtAxios.get(`${host}/${pno}`)\r\n    return res.data\r\n}\r\n\r\nexport const getList = async (pageParam) => {\r\n    const { page, size } = pageParam\r\n    const res = await jwtAxios.get(`${host}/list`, { params: { page: page, size: size } })\r\n    return res.data\r\n}\r\n\r\nexport const postAdd = async (products) => {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n    const res = await jwtAxios.post(`${host}/`, products, header)\r\n\r\n    return res.data\r\n}\r\n\r\nexport const putOne = async (formData, pno) => {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n    const res = await jwtAxios.put(`${host}/${pno}`, formData, header)\r\n    return res.data\r\n}\r\n\r\n\r\nexport const deleteOne = async (products) => {\r\n    const res = await jwtAxios.delete(`${host}/${products.pno}`)\r\n    return res.data\r\n}\r\n\r\nexport const getOneImage = (fileName) => {\r\n    return `${host}/view/${fileName}`\r\n}","import { useEffect, useState } from \"react\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { getList, getOneImage } from \"../../api/productsApi\";\r\nimport PageComponent from \"../common/PageComponent\";\r\nimport FetchingModal from \"../common/FetchingModal\"\r\n\r\nconst initState = {\r\n    dtoList: [],\r\n    pageNumList: [],\r\n    pageRequestDTO: null,\r\n    prev: false,\r\n    next: false,\r\n    totalCount: 0,\r\n    prevPage: 0,\r\n    nextPage: 0,\r\n    totalPage: 0,\r\n    current: 0\r\n}\r\n\r\nconst ListComponent = () => {\r\n    const { page, size, moveToList, moveToRead, refresh } = useCustomMove()\r\n    const { exceptionHandle } = useCustomLogin()\r\n    const [serverData, setServerData] = useState(initState)\r\n    const [fetching, setFetching] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setFetching(true)\r\n        getList({ page, size }).then(data => {\r\n            console.log(data)\r\n            setServerData(data)\r\n            setFetching(false)\r\n        }).catch( err => exceptionHandle(err))\r\n    }, [page, size, refresh])\r\n    \r\n    return (\r\n        <div className=\"border-2 border-green-100 mt-10 mr-2 ml-2\">\r\n            {fetching ? <FetchingModal /> : <></>}\r\n            <div className=\"container flex flex-wrap mx-auto justify-center p-6\">\r\n                {serverData.dtoList.map(products =>\r\n                    <div key={products.pno} className=\"w-1/3 p-2 m-2 rounded shadow-md\"\r\n                        onClick={() => moveToRead(products.pno)}>\r\n                        <div className=\"font-extrabold text-lg w-1/12\">{products.pno} </div>\r\n                        <div className=\"font-extrabold text-lg w-11/12\">{products.pname}</div>\r\n                        <div className=\"font-extrabold text-base m-1 p-2 w-8/12\">\r\n                            <img src={getOneImage(products.uploadFileNames[0])} alt={products.pname} ></img>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <PageComponent serverData={serverData} movePage={moveToList} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListComponent;","import { useSearchParams } from \"react-router-dom\";\r\nimport ListComponent from \"../../components/products/ListComponent\";\r\n\r\nconst ListPage = () => {\r\n    const [queryParams] = useSearchParams()\r\n\r\n    const page = queryParams.get(\"page\") ? parseInt(queryParams.get(\"page\")) : 1\r\n    const size = queryParams.get(\"size\") ? parseInt(queryParams.get(\"size\")) : 10\r\n\r\n    return (\r\n        <div className=\"p-4 w-full bg-white\">\r\n            <div className=\"text-3xl font-extrabold text-green-700\">\r\n                Products List Page components\r\n            </div>\r\n            <div className=\"text-2xl font-extrabold\">\r\n                <br />page: {page} / size: {size}\r\n            </div>\r\n            <ListComponent></ListComponent>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPage;","import { createSearchParams, Navigate, useNavigate } from \"react-router-dom\"\r\nimport { loginPostAsync, logout } from \"../slices/LoginSlice\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\n// 로그인 판별\r\nconst useCustomLogin = () => {\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const loginState = useSelector(state => state.loginSlice)\r\n    const isLogin = loginState.email ? true : false\r\n    \r\n    const doLogin = async (loginParam) => {\r\n        const action = await dispatch(loginPostAsync(loginParam))\r\n        return action.payload\r\n    }\r\n\r\n    const doLogout = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const moveToPath = (path) => {\r\n        navigate({pathname:path}, {replace:true})\r\n    }\r\n\r\n    const moveToLogin = () => {\r\n        navigate({pathname:'/member/login'}, {replace:true})\r\n    }\r\n\r\n    const moveToLoginReturn = () => {\r\n        return <Navigate replace to = \"/member/login\" />\r\n    }\r\n\r\n    const exceptionHandle = (ex) => {\r\n        console.log(\"Exception--------------------\")\r\n        console.log(ex)\r\n\r\n        const errorMsg = ex.response.data.errorMsg\r\n        const errorStr = createSearchParams({error: errorMsg}).toString()\r\n\r\n        if(errorMsg === 'REQUIRE_LOGIN'){\r\n            alert(\"로그인이 필요합니다.\")\r\n            navigate({pathname:'/member/login', search:errorStr})\r\n            return\r\n        }\r\n\r\n        if(ex.response.data.error === 'ERROR_ACCESSDENIED'){\r\n            alert('권한이 부족하여 해당 메뉴를 사용할 수 없습니다.')\r\n            navigate({pathname:`/member/login`, search:errorStr})\r\n            return\r\n        }\r\n    }\r\n\r\n    return{loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\r\n}\r\n\r\nexport default useCustomLogin","const PageComponent = ({ serverData, movePage }) => {\r\n    return (\r\n        <div className=\"m-6 flex justify-center\">\r\n            {serverData.prev ?\r\n                <div className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n                    onClick={() => movePage({ page: serverData.prevPage })}>이전</div> : <></>}\r\n            {serverData.pageNumList.map(pageNum =>\r\n                <div key={pageNum} className={`m-2 p-2 w-12 text-center rounded shadow-md text-white \r\n            ${serverData.current === pageNum ? 'bg-red-500' : 'bg-blue-400'}`} onClick={() => movePage({ page: pageNum })}>{pageNum}</div>)}\r\n            {serverData.next ?\r\n                <div className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n                    onClick={() => movePage({ page: serverData.nextPage })}>다음</div> : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageComponent;","import { useState } from \"react\";\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n    if (!param)\r\n        return defaultValue;\r\n    return parseInt(param);\r\n}\r\n\r\nconst useCustomMove = () => {\r\n    const navigate = useNavigate()\r\n    const [queryParams] = useSearchParams()\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const page = getNum(queryParams.get(\"page\"), 1)\r\n    const size = getNum(queryParams.get(\"size\"), 10)\r\n    const queryDefault = createSearchParams({ page, size }).toString()\r\n\r\n    const moveToList = (pageParam) => {\r\n        let queryStr = \"\"\r\n        if (pageParam) {\r\n            const pageNum = getNum(pageParam.page, 1)\r\n            const sizeNum = getNum(pageParam.size, 10)\r\n            queryStr = createSearchParams({ page: pageNum, size: sizeNum }).toString()\r\n        } else {\r\n            queryStr = queryDefault\r\n        }\r\n        setRefresh(!refresh)\r\n        navigate({ pathname: '../list', search: queryStr })\r\n    }\r\n\r\n    const moveToModify = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../modify/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n\r\n    const moveToRead = (num) => {\r\n        console.log(queryDefault)\r\n        navigate({\r\n            pathname: `../read/${num}`,\r\n            search: queryDefault\r\n        })\r\n    }\r\n    return { page, size, refresh, moveToList, moveToModify, moveToRead }\r\n}\r\n\r\nexport default useCustomMove;"],"names":["FetchingModal","_jsx","className","children","host","API_SERVER_HOST","getOne","async","jwtAxios","get","pno","data","getList","page","size","pageParam","params","postAdd","post","products","headers","putOne","formData","put","deleteOne","delete","getOneImage","fileName","initState","dtoList","pageNumList","pageRequestDTO","prev","next","totalCount","prevPage","nextPage","totalPage","current","ListComponent","moveToList","moveToRead","refresh","useCustomMove","exceptionHandle","useCustomLogin","serverData","setServerData","useState","fetching","setFetching","useEffect","then","console","log","catch","err","_jsxs","_Fragment","map","onClick","pname","src","uploadFileNames","alt","PageComponent","movePage","ListPage","queryParams","useSearchParams","parseInt","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","email","doLogin","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","Navigate","to","ex","errorMsg","response","errorStr","createSearchParams","error","toString","alert","search","_ref","pageNum","getNum","param","defaultValue","setRefresh","queryDefault","queryStr","sizeNum","moveToModify","num"],"sourceRoot":""}